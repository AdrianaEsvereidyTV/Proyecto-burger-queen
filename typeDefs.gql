type Food{
    _id: ID
    name: String!
    price: Int!
    shift: Boolean!
}

type Drink{
    _id: ID
    name: String!
    price: Int!
}

type Side{
    _id: ID
    name: String!
    price: Int!
}

type Extra{
    _id: ID
    name: String!
    price: Int!
}

type Order{
    _id: ID
    food: [Food]!
    drink: [Drink]!
    side:[Side]
    extra:[Extra]
    total: Int!
    client: String!
    employee: User!
}

type User{
    _id: ID
    username: String! @unique
    password: String!
}

type Token{
    token: String!
}

type Query {
   getUser: User
   getDrinkList: [Drink]!
   getFoodList: [Food]!
   getOrderList: [Order]!
   getSideList:[Side]
   getExtraList:[Extra]
}

type Mutation{
    addDrink(name:String!, price:Int!): Drink!
    addFood(name:String!, price:Int!, shift: Boolean!, extra: [String], side:[String]): Food!
    addOrder(food:ID!, drink: ID!, side: [ID], extra:[ID], total: Int!, client: String!, employee: ID!): Order!
    addSide(name:String!, price:Int!):Side
    addExtra(name:String!, price:Int!):Extra
    signupUser(username:String!, password:String!): Token
    signinUser(username:String!, password:String!): Token

}