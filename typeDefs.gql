type Food {
    _id: ID
    name: String!
    price: Int!
    shift: Boolean!
} 

type Drink {
    _id: ID
    name: String!
    price: Int!
} 

type Extra {
    _id: ID
    name: String!
    price: Int!
}

type Side {
    _id: ID
    name: String!
    price: Int!
}

type Order {
    _id: ID
    food: [Food]!
    drink: [Drink]!
    extra: [Extra]
    side: [Side]
    total: Int!
    client: String!
    employee: User!
}

type User {
    _id: ID
    username: String! @unique
    password: String!
}


type Query {
    getUser: User
    getDrinkList: [Drink]!
    getFoodList: [Food]!
    getOrderList: [Order]!
    getExtraList: [Extra] 
    getSideList: [Side]

}


type Mutation {
    addDrink(name: String!, price: Int!): Drink!
    addFood(
        name: String!
        price: Int! 
        shift: Boolean!): Food!
    addOrder(
        food: ID!
        drink: ID!
        extra: [ID]
        side: [ID]
        total: Int!
        client: String!
        employee: ID!): Order!
    addExtra(name: String!, price: Int!): Extra!
    addSide(name: String!, price: Int!):Side!
     
    singupUser ( username: String!, password: String! ):User! 
} 

